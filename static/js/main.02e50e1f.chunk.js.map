{"version":3,"sources":["serviceWorker.js","Formaters.js","components/Music/Music.js","components/Player/Player.js","containers/Dj/Dj.js","index.js"],"names":["Boolean","window","location","hostname","match","timeFormat","time","date","Date","setSeconds","toISOString","substr","Music","_ref","songInfo","onAdd","react_default","a","createElement","row","align","type","col","span","title","description","duration","visualizations","es_button","icon","onClick","event","stopPropagation","uuid","htmlType","MusicLite","_ref2","onSkipTo","popconfirm","onConfirm","okText","cancelText","Player","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","isVisible","isPlaying","currentTime","isDisabled","props","onVolumeClick","setState","onPlayPause","resetInterval","console","debug","clearInterval","interval","setInterval","onFinish","onChange","value","onAfterChange","onSeek","inherits","createClass","key","prevProps","prevState","_this2","_this$props","onPlay","onPause","onBackward","onForward","onVolume","Fragment","style","textAlign","slider","min","max","marks","0","100","objectSpread","defineProperty","disabled","tipFormatter","popover","content","trigger","visible","React","Component","Header","Content","Footer","Dj","isLoading","searchString","musicList","queue","currentSong","onSearch","songList","volume","seek","songUUID","find","layout","minHeight","affix","display","flexDirection","flexWrap","justifyContent","alignItems","map","Music_MusicLite","input","Search","enterButton","target","Music_Music","divider","offsetBottom","borderTop","borderTopWidth","Player_Player","42","142","ReactDOM","render","Dj_Dj","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4NClBOC,EAAa,SAACC,GACzB,IAAIC,EAAO,IAAIC,KAAK,MAEpB,OADAD,EAAKE,WAAWH,GACTC,EAAKG,cAAcC,OAAO,GAAI,sDCI1BC,EAAQ,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAAZ,OACnBC,EAAAC,EAAAC,cAAAC,EAAA,GACEC,MAAM,SACNC,KAAK,QAELL,EAAAC,EAAAC,cAAAI,EAAA,GAAKC,KAAM,IACTP,EAAAC,EAAAC,cAAA,UAAKJ,EAASU,OACdR,EAAAC,EAAAC,cAAA,UAAKJ,EAASW,aACdT,EAAAC,EAAAC,cAAA,UAAKb,EAAWS,EAASY,UAAzB,IAAqCZ,EAASa,iBAEhDX,EAAAC,EAAAC,cAAAI,EAAA,OACEN,EAAAC,EAAAC,cAAAU,EAAA,GACEP,KAAK,UACLQ,KAAK,cACLC,QAAS,SAACC,GACNA,EAAMC,kBACNjB,EAAMD,EAASmB,OAGnBC,SAAS,cAWJC,EAAY,SAAAC,GAAA,IAAEtB,EAAFsB,EAAEtB,SAAUuB,EAAZD,EAAYC,SAAZ,OACvBrB,EAAAC,EAAAC,cAAAC,EAAA,GACEC,MAAM,SACNC,KAAK,QAELL,EAAAC,EAAAC,cAAAI,EAAA,GAAKC,KAAM,IACTP,EAAAC,EAAAC,cAAAC,EAAA,OAAML,EAASU,OACfR,EAAAC,EAAAC,cAAAC,EAAA,OAAMd,EAAWS,EAASY,YAE5BV,EAAAC,EAAAC,cAAAI,EAAA,OACEN,EAAAC,EAAAC,cAAAoB,EAAA,GACEd,MACER,EAAAC,EAAAC,cAAA,gDACmCF,EAAAC,EAAAC,cAAA,cAASJ,EAASU,OADrD,KAIFe,UACE,SAACR,GACCA,EAAMC,kBACNK,EAASvB,EAASmB,OAGtBO,OAAO,MACPC,WAAW,MAEXzB,EAAAC,EAAAC,cAAAU,EAAA,GACEM,SAAS,SACTb,KAAK,UACLQ,KAAK,sDC3DFa,UAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEEQ,MAAQ,CACNC,WAAW,EACXC,WAAW,EACXC,YAAa,EACbC,YAAanB,EAAKoB,MAAMnD,UAN5B+B,EASEqB,cAAgB,WACdrB,EAAKsB,SAAS,CACZN,WAAYhB,EAAKe,MAAMC,aAX7BhB,EAeEuB,YAAc,WACZvB,EAAKsB,SAAS,CAACL,WAAYjB,EAAKe,MAAME,aAhB1CjB,EAmBEwB,cAAgB,WACdC,QAAQC,MAAM,sBACdC,cAAc3B,EAAK4B,UACnB5B,EAAK4B,SAAWC,YAAY,WACxB7B,EAAKe,MAAMG,YAAclB,EAAKoB,MAAMnD,SAASY,SAC3CmB,EAAKsB,SAAS,CAAEJ,YAAalB,EAAKe,MAAMG,YAAc,IAEtDlB,EAAK8B,YAER,MA5BP9B,EAgCE8B,SAAW,WACTH,cAAc3B,EAAK4B,UACnB5B,EAAKoB,MAAMU,YAlCf9B,EAqCE+B,SAAW,SAACC,GACVL,cAAc3B,EAAK4B,UACnB5B,EAAKsB,SAAS,CAACJ,YAAac,KAvChChC,EA0CEiC,cAAgB,SAACD,GACfhC,EAAKsB,SACH,CAACJ,YAAac,GACd,WACEhC,EAAKwB,kBAGTxB,EAAKoB,MAAMc,OAAOF,IAjDtBhC,EAAA,OAAAC,OAAAkC,EAAA,EAAAlC,CAAAJ,EAAAC,GAAAG,OAAAmC,EAAA,EAAAnC,CAAAJ,EAAA,EAAAwC,IAAA,qBAAAL,MAAA,SAoDqBM,EAAWC,GACzBpC,KAAKiB,MAAMnD,SACPqE,EAAUrE,UACbkC,KAAKmB,SAAS,CACZH,YAAY,EACZD,YAAaf,KAAKiB,MAAMnD,SAASiD,cACjCD,UAAWd,KAAKiB,MAAMnD,SAASgD,cAI/BqB,EAAUrE,UACZkC,KAAKmB,SAAS,CAAEH,YAAY,IAI7BhB,KAAKY,MAAME,UACRsB,EAAUtB,WACZd,KAAKqB,gBAIJe,EAAUtB,WACXU,cAAcxB,KAAKyB,YA1E3B,CAAAS,IAAA,oBAAAL,MAAA,WA8EO7B,KAAKiB,MAAMnD,WACZkC,KAAKmB,SAAS,CACZJ,YAAaf,KAAKiB,MAAMnD,SAASiD,cACjCD,UAAWd,KAAKiB,MAAMnD,SAASgD,cAE9Bd,KAAKiB,MAAMnD,SAASgD,WACrBd,KAAKqB,mBApFb,CAAAa,IAAA,SAAAL,MAAA,WAwFW,IAAAQ,EAAArC,KAAAsC,EASHtC,KAAKiB,MANPsB,EAHKD,EAGLC,OACAC,EAJKF,EAILE,QACAC,EALKH,EAKLG,WACAC,EANKJ,EAMLI,UACAC,EAPKL,EAOLK,SACA7E,EARKwE,EAQLxE,SAGF,OACEE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACE5E,EAAAC,EAAAC,cAAAC,EAAA,OACEH,EAAAC,EAAAC,cAAAI,EAAA,GAAKC,KAAM,IAEPyB,KAAKY,MAAMI,WACX,GAEAlD,EAASU,OAGbR,EAAAC,EAAAC,cAAAI,EAAA,GAAKuE,MAAO,CAACC,UAAU,UAEnB9C,KAAKY,MAAMI,WACT,YAEA,IAAM3D,EAAW2C,KAAKiB,MAAMnD,SAASY,SAAWsB,KAAKY,MAAMG,eAInE/C,EAAAC,EAAAC,cAAA6E,EAAA,GACEC,IAAK,EACLC,IACEjD,KAAKiB,MAAMnD,SACTkC,KAAKiB,MAAMnD,SAASY,SAEpB,EAEJmD,MAAO7B,KAAKY,MAAMG,YAClBmC,MACElD,KAAKY,MAAMI,WACX,CACEmC,EFnIoB,WEoIpBC,IFpIoB,YEiItBtD,OAAAuD,EAAA,EAAAvD,QAAAwD,EAAA,EAAAxD,CAAA,CAOAqD,EAAE9F,EAAW,IACZS,EAASY,SAAWrB,EAAWS,EAASY,WACtCZ,EAASoF,OAGdpB,cAAe9B,KAAK8B,cACpBF,SAAU5B,KAAK4B,SACf2B,SAAUvD,KAAKY,MAAMI,WACrBwC,aAAcnG,IAEhBW,EAAAC,EAAAC,cAAAC,EAAA,OACEH,EAAAC,EAAAC,cAAAI,EAAA,GAAKC,KAAM,IACTP,EAAAC,EAAAC,cAAAC,EAAA,OACEH,EAAAC,EAAAC,cAAAI,EAAA,GAAKC,KAAM,GACTP,EAAAC,EAAAC,cAAAU,EAAA,GACEM,SAAS,SACTb,KAAK,UACLQ,KAAK,gBACLC,QAAS2D,EACTc,SAAUvD,KAAKY,MAAMI,cAGzBhD,EAAAC,EAAAC,cAAAI,EAAA,GAAKC,KAAM,GACTP,EAAAC,EAAAC,cAAAU,EAAA,GACEM,SAAS,SACTb,KAAK,UACLQ,KAAOmB,KAAKY,MAAME,UAAY,eAAiB,cAC/ChC,QAAS,SAACC,GACRsD,EAAKjB,cACLiB,EAAKzB,MAAME,UAAY0B,EAAQzD,GAASwD,EAAOxD,IAEjDwE,SAAUvD,KAAKY,MAAMI,cAGzBhD,EAAAC,EAAAC,cAAAI,EAAA,GAAKC,KAAM,GACTP,EAAAC,EAAAC,cAAAU,EAAA,GACEM,SAAS,SACTb,KAAK,UACLQ,KAAK,eACLC,QAAS4D,EACTa,SAAUvD,KAAKY,MAAMI,gBAK7BhD,EAAAC,EAAAC,cAAAI,EAAA,OACEN,EAAAC,EAAAC,cAAAuF,EAAA,GACEjF,MAAM,SACNkF,QACE1F,EAAAC,EAAAC,cAAA6E,EAAA,GACEC,IAAK,EACLC,IAAK,IACLnB,cAAea,IAGnBgB,QAAQ,QACRC,QAAS5D,KAAKY,MAAMC,WAEpB7C,EAAAC,EAAAC,cAAAU,EAAA,GACEM,SAAS,SACTb,KAAK,UACLQ,KAAK,QACLC,QAASkB,KAAKkB,cACdqC,SAAUvD,KAAKY,MAAMI,qBAvMrCtB,EAAA,CAA4BmE,IAAMC,YCG1BC,aAAQC,cAASC,aAEZC,EAAb,SAAAvE,GAAA,SAAAuE,IAAA,IAAAtE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,GAAA,QAAAjE,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAoE,IAAAzD,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CACNuD,WAAW,EACXC,aAAc,GACdC,UAAW,GACXC,MAAO,GACPC,YAAa,MANjB1E,EASE2E,SAAW,WACT,IAAMD,EAAcE,EAAS,GAC7BF,EAAYxD,YAAc,kBAAO,IACjCwD,EAAYzD,UAAY,kBAAO,GAC/BjB,EAAKsB,SAAS,CACZkD,UAAWI,EACXF,YAAaA,EACbD,MAAOG,KAhBb5E,EAoBE8C,SAAW,SAAC+B,GACVpD,QAAQC,MAAM,UAAWmD,IArB7B7E,EAwBEkC,OAAS,SAAC4C,GACRrD,QAAQC,MAAM,QAASoD,EAAM,IAAKtH,EAAWsH,GAAO,MAzBxD9E,EA4BE0C,OAAS,WACPjB,QAAQC,MAAM,UA7BlB1B,EAgCE2C,QAAU,WACRlB,QAAQC,MAAM,WAjClB1B,EAoCE4C,WAAa,WACXnB,QAAQC,MAAM,cArClB1B,EAwCE6C,UAAY,WACVpB,QAAQC,MAAM,aAzClB1B,EA4CE8B,SAAW,WACTL,QAAQC,MAAM,mBA7ClB1B,EAgDE9B,MAAQ,SAAC6G,GACPtD,QAAQC,MACN,YACAqD,EACA,IACA/E,EAAKe,MAAMyD,UAAUQ,KACnB,SAAC/G,GAAD,OACEA,EAASmB,OAAS2F,IAEpBpG,MACF,MA1DNqB,EA8DER,SAAW,SAACuF,GACVtD,QAAQC,MACN,gBACAqD,EACA,IACA/E,EAAKe,MAAM0D,MAAMO,KACf,SAAC/G,GAAD,OACEA,EAASmB,OAAS2F,IAEpBpG,MACF,MAxENqB,EAAA,OAAAC,OAAAkC,EAAA,EAAAlC,CAAAoE,EAAAvE,GAAAG,OAAAmC,EAAA,EAAAnC,CAAAoE,EAAA,EAAAhC,IAAA,SAAAL,MAAA,WA4EW,IAAAQ,EAAArC,KAgBP,OAfAsB,QAAQC,MAAM,iBAAkBvB,KAAKY,MAAMwD,cAC3C9C,QAAQC,MAAM,cAAevB,KAAKY,MAAMyD,WACxC/C,QAAQC,MACN,gBACAvB,KAAKY,MAAM2D,YACTvE,KAAKY,MAAM2D,YAAYtF,KAEvB,mBACF,IACAe,KAAKY,MAAM2D,YACTvE,KAAKY,MAAM2D,YAAY/F,MAEvB,GACF,KAGAR,EAAAC,EAAAC,cAAA4G,EAAA,GACEjC,MAAO,CACLkC,UAAW,UAGb/G,EAAAC,EAAAC,cAAA8G,EAAA,OACEhH,EAAAC,EAAAC,cAAC6F,EAAD,CACElB,MAAO,CACLoC,QAAQ,OACRC,cAAc,MACdC,SAAS,SACTC,eAAgB,eAChBC,WAAY,WAGdrH,EAAAC,EAAAC,cAAAuF,EAAA,GACEjF,MAAM,QACNkF,QACE1D,KAAKY,MAAM0D,MAAMgB,IACf,SAACxH,GAAD,OACEE,EAAAC,EAAAC,cAACqH,EAAD,CACErD,IAAKpE,EAASmB,KACdnB,SAAUA,EACVuB,SAAUgD,EAAKhD,cAMvBrB,EAAAC,EAAAC,cAAAU,EAAA,GACEM,SAAS,SACTb,KAAK,UACLQ,KAAK,kBAGTb,EAAAC,EAAAC,cAAAsH,EAAA,EAAOC,OAAP,CACEC,aAAW,EACXlB,SAAUxE,KAAKwE,SACf5C,SAAU,SAAC7C,GAAD,OACRsD,EAAKlB,SAAS,CAACiD,aAAarF,EAAM4G,OAAO9D,SAE3C0B,SAAUvD,KAAKY,MAAMuD,cAI3BnG,EAAAC,EAAAC,cAAC8F,EAAD,KAEIhE,KAAKY,MAAMyD,UAAUiB,IAAI,SAACxH,GACxB,OACEE,EAAAC,EAAAC,cAAA,OAAKgE,IAAKpE,EAASmB,MACjBjB,EAAAC,EAAAC,cAAC0H,EAAD,CACE9H,SAAUA,EACVC,MAAOsE,EAAKtE,QAEdC,EAAAC,EAAAC,cAAA2H,EAAA,YAMV7H,EAAAC,EAAAC,cAAA8G,EAAA,GACEc,aAAc,GAEd9H,EAAAC,EAAAC,cAAC+F,EAAD,CACEpB,MAAO,CACLkD,UAAU,QACVC,eAAe,IAGjBhI,EAAAC,EAAAC,cAAC+H,EAAD,CACEnI,SAAUkC,KAAKY,MAAM2D,YACrB5B,SAAU3C,KAAK2C,SACfJ,OAAQvC,KAAKuC,OACbC,QAASxC,KAAKwC,QACdC,WAAYzC,KAAKyC,WACjBC,UAAW1C,KAAK0C,UAChBf,SAAU3B,KAAK2B,SACfI,OAAQ/B,KAAK+B,gBA1K3BmC,EAAA,CAAwBL,IAAMC,WAmLxBW,EAAW,CACf,CACE9F,eAAgB,MAChBD,SAAU,IACVF,MAAO,WACPC,YAAa,+BACbyE,MAAO,CACLgD,GAAG,OACHC,IAAI,UAENlH,KAAMA,OAER,CACEN,eAAgB,IAChBD,SAAU,MACVF,MAAO,aACPC,YAAa,gCACbQ,KAAMA,OAER,CACEN,eAAgB,MAChBD,SAAU,IACVF,MAAO,WACPC,YAAa,+BACbQ,KAAMA,OAER,CACEN,eAAgB,IAChBD,SAAU,MACVF,MAAO,aACPC,YAAa,gCACbQ,KAAMA,OAER,CACEN,eAAgB,MAChBD,SAAU,IACVF,MAAO,WACPC,YAAa,+BACbQ,KAAMA,OAER,CACEN,eAAgB,IAChBD,SAAU,MACVF,MAAO,aACPC,YAAa,gCACbQ,KAAMA,OAER,CACEN,eAAgB,MAChBD,SAAU,IACVF,MAAO,WACPC,YAAa,+BACbQ,KAAMA,OAER,CACEN,eAAgB,IAChBD,SAAU,MACVF,MAAO,aACPC,YAAa,gCACbQ,KAAMA,OAER,CACEN,eAAgB,MAChBD,SAAU,IACVF,MAAO,WACPC,YAAa,+BACbQ,KAAMA,OAER,CACEN,eAAgB,IAChBD,SAAU,MACVF,MAAO,aACPC,YAAa,gCACbQ,KAAMA,OAER,CACEN,eAAgB,MAChBD,SAAU,IACVF,MAAO,WACPC,YAAa,+BACbQ,KAAMA,OAER,CACEN,eAAgB,IAChBD,SAAU,MACVF,MAAO,aACPC,YAAa,gCACbQ,KAAMA,QC9QVmH,IAASC,OAAOrI,EAAAC,EAAAC,cAACoI,EAAD,MAAQC,SAASC,eAAe,SLsH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.02e50e1f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const timeFormat = (time) => { // hh:mm:ss\n  let date = new Date(null);\n  date.setSeconds(time);\n  return date.toISOString().substr(11, 8);\n}\n\nexport const timeFormatDisabled = '--:--:--'","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { timeFormat } from '../../Formaters'\n\nimport { Row, Col, Button, Popconfirm } from 'antd'\n\nexport const Music = ({songInfo, onAdd}) => (\n  <Row\n    align='middle'\n    type='flex'\n  >\n    <Col span={20}>\n      <h1>{songInfo.title}</h1>\n      <h2>{songInfo.description}</h2>\n      <h3>{timeFormat(songInfo.duration)}|{songInfo.visualizations}</h3>\n    </Col>\n    <Col>\n      <Button\n        type='primary'\n        icon='plus-circle'\n        onClick={(event) => {\n            event.stopPropagation();\n            onAdd(songInfo.uuid);\n          }\n        }\n        htmlType='button'\n      />\n    </Col>\n  </Row>\n)\n\nMusic.propTypes = {\n  songInfo: PropTypes.object.isRequired,\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport const MusicLite = ({songInfo, onSkipTo}) => (\n  <Row\n    align='middle'\n    type='flex'\n  >\n    <Col span={18}>\n      <Row>{songInfo.title}</Row>\n      <Row>{timeFormat(songInfo.duration)}</Row>\n    </Col>\n    <Col>\n      <Popconfirm\n        title={\n          <span>\n            Are you sure you want to skip to <strong>{songInfo.title}</strong>?\n          </span>\n        }\n        onConfirm={\n          (event) => {\n            event.stopPropagation()\n            onSkipTo(songInfo.uuid)\n          }\n        }\n        okText=\"Yes\"\n        cancelText=\"No\"\n      >\n        <Button\n          htmlType='button'\n          type='primary'\n          icon='play-circle'\n        />\n      </Popconfirm>\n    </Col>\n  </Row>\n)\n\nMusicLite.propTypes = {\n  songInfo: PropTypes.object.isRequired,\n  onSkipTo: PropTypes.func.isRequired,\n}","import React from 'react'\nimport PropTypes from 'react-proptypes'\nimport { timeFormat, timeFormatDisabled } from '../../Formaters'\n\nimport { Button, Slider, Popover, Row, Col } from 'antd'\n\nexport class Player extends React.Component {\n\n  state = {\n    isVisible: false,\n    isPlaying: false,\n    currentTime: 0,\n    isDisabled: !this.props.songInfo,\n  }\n\n  onVolumeClick = () => {\n    this.setState({\n      isVisible: !this.state.isVisible\n    })\n  }\n\n  onPlayPause = () => {\n    this.setState({isPlaying: !this.state.isPlaying})\n  }\n\n  resetInterval = () => {\n    console.debug(\"Resetting interval\")\n    clearInterval(this.interval)\n    this.interval = setInterval(() => {\n        this.state.currentTime < this.props.songInfo.duration ?\n          this.setState({ currentTime: this.state.currentTime + 1 })\n          :\n          this.onFinish();\n      }\n      ,1000\n    )\n  }\n\n  onFinish = () => {\n    clearInterval(this.interval)\n    this.props.onFinish()\n  }\n\n  onChange = (value) => {\n    clearInterval(this.interval)\n    this.setState({currentTime: value})\n  }\n\n  onAfterChange = (value) => {\n    this.setState(\n      {currentTime: value},\n      () => {\n        this.resetInterval()\n      }\n    )\n    this.props.onSeek(value)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.props.songInfo) {\n      if (!prevProps.songInfo)\n        this.setState({\n          isDisabled: false,\n          currentTime: this.props.songInfo.currentTime(),\n          isPlaying: this.props.songInfo.isPlaying(),\n        })\n    }\n    else {\n      if (prevProps.songInfo) {\n        this.setState({ isDisabled: true })\n      }\n    }\n\n    if(this.state.isPlaying) {\n      if(!prevState.isPlaying) {\n        this.resetInterval()\n      }\n    }\n    else\n      if(prevState.isPlaying)\n        clearInterval(this.interval)\n  }\n\n  componentDidMount() {\n    if(this.props.songInfo) {\n      this.setState({\n        currentTime: this.props.songInfo.currentTime(),\n        isPlaying: this.props.songInfo.isPlaying(),\n      })\n      if(this.props.songInfo.isPlaying)\n        this.resetInterval()\n    }\n  }\n\n  render() {\n\n    const {\n      onPlay,\n      onPause,\n      onBackward,\n      onForward,\n      onVolume,\n      songInfo,\n    } = this.props\n\n    return (\n      <>\n        <Row>\n          <Col span={20}>\n            {\n              this.state.isDisabled ?\n              ''\n              :\n              songInfo.title\n            }\n          </Col>\n          <Col style={{textAlign:'right'}}>\n            {\n              this.state.isDisabled ?\n                '-' + timeFormatDisabled\n                :\n                '-' + timeFormat(this.props.songInfo.duration - this.state.currentTime)\n            }\n          </Col>\n        </Row>\n        <Slider\n          min={0}\n          max={\n            this.props.songInfo ?\n              this.props.songInfo.duration\n              :\n              0\n          }\n          value={this.state.currentTime}\n          marks={\n            this.state.isDisabled ?\n            {\n              0: timeFormatDisabled,\n              100: timeFormatDisabled,\n            }\n            :\n            {\n            0:timeFormat(0),\n            [songInfo.duration]: timeFormat(songInfo.duration),\n            ...songInfo.marks\n            }\n          }\n          onAfterChange={this.onAfterChange}\n          onChange={this.onChange}\n          disabled={this.state.isDisabled}\n          tipFormatter={timeFormat}\n        />\n        <Row>\n          <Col span={20}>\n            <Row>\n              <Col span={8}>\n                <Button\n                  htmlType='button'\n                  type='primary'\n                  icon='step-backward'\n                  onClick={onBackward}\n                  disabled={this.state.isDisabled}\n                />\n              </Col>\n              <Col span={8}>\n                <Button\n                  htmlType='button'\n                  type='primary'\n                  icon={ this.state.isPlaying ? 'pause-circle' : 'play-circle' }\n                  onClick={(event) => {\n                    this.onPlayPause();\n                    this.state.isPlaying ? onPause(event) : onPlay(event);\n                  }}\n                  disabled={this.state.isDisabled}\n                />\n              </Col>\n              <Col span={8}>\n                <Button\n                  htmlType='button'\n                  type='primary'\n                  icon='step-forward'\n                  onClick={onForward}\n                  disabled={this.state.isDisabled}\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <Popover\n              title=\"Volume\"\n              content={\n                <Slider\n                  min={0}\n                  max={100}\n                  onAfterChange={onVolume}\n                />\n              }\n              trigger='click'\n              visible={this.state.isVisible}\n            >\n              <Button\n                htmlType='button'\n                type='primary'\n                icon='sound'\n                onClick={this.onVolumeClick}\n                disabled={this.state.isDisabled}\n              />\n            </Popover>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n}\n\nPlayer.propTypes = {\n  songInfo: PropTypes.object,\n  onPlay: PropTypes.func.isRequired, // (event)=>{...}\n  onPause: PropTypes.func.isRequired, // (event)=>{...}\n  onBackward: PropTypes.func.isRequired, // (event)=>{...}\n  onForward: PropTypes.func.isRequired, // (event)=>{...}\n  onFinish: PropTypes.func.isRequired, // (event)=>{...}\n  onVolume: PropTypes.func.isRequired, // (volume)=>{...}\n  onSeek: PropTypes.func.isRequired, // (seek)=>{...}\n}","import React from 'react'\n\nimport { Affix, Button, Divider, Input, Popover, Layout } from 'antd'\n\nimport uuid from 'uuid/v4'\nimport { timeFormat } from '../../Formaters'\nimport { Music, MusicLite } from '../../components/Music/Music'\nimport { Player } from '../../components/Player/Player'\n\nconst { Header, Content, Footer } = Layout\n\nexport class Dj extends React.Component {\n  state = {\n    isLoading: false,\n    searchString: \"\",\n    musicList: [],\n    queue: [],\n    currentSong: null,\n  }\n\n  onSearch = () => {\n    const currentSong = songList[0];\n    currentSong.currentTime = () => (10);\n    currentSong.isPlaying = () => (false);\n    this.setState({\n      musicList: songList,\n      currentSong: currentSong,\n      queue: songList,\n    })\n  }\n\n  onVolume = (volume) => {\n    console.debug(\"Volume:\", volume)\n  }\n\n  onSeek = (seek) => {\n    console.debug(\"Seek:\", seek, \"(\", timeFormat(seek), \")\")\n  }\n\n  onPlay = () => {\n    console.debug(\"Play!\");\n  }\n\n  onPause = () => {\n    console.debug(\"Pause!\");\n  }\n\n  onBackward = () => {\n    console.debug(\"Backward!\");\n  }\n\n  onForward = () => {\n    console.debug(\"Forward!\");\n  }\n\n  onFinish = () => {\n    console.debug(\"Song Finished!\");\n  }\n\n  onAdd = (songUUID) => {\n    console.debug(\n      \"Add Song:\",\n      songUUID,\n      \"(\",\n      this.state.musicList.find(\n        (songInfo) => (\n          songInfo.uuid === songUUID\n        )\n      ).title,\n      \")\"\n    )\n  }\n\n  onSkipTo = (songUUID) => {\n    console.debug(\n      \"Skip To Song:\",\n      songUUID,\n      \"(\",\n      this.state.queue.find(\n        (songInfo) => (\n          songInfo.uuid === songUUID\n        )\n      ).title,\n      \")\"\n    )\n  }\n\n  render() {\n    console.debug(\"Search String:\", this.state.searchString)\n    console.debug(\"Music List:\", this.state.musicList)\n    console.debug(\n      \"Current Song:\",\n      this.state.currentSong ?\n        this.state.currentSong.uuid\n        :\n        'No Song In Queue',\n      \"(\",\n      this.state.currentSong ?\n        this.state.currentSong.title\n        :\n        '',\n      \")\",\n    )\n    return(\n      <Layout\n        style={{\n          minHeight: '100vh',\n        }}\n      >\n        <Affix>\n          <Header\n            style={{\n              display:'flex',\n              flexDirection:'row',\n              flexWrap:'nowrap',\n              justifyContent: 'space-evenly',\n              alignItems: 'center'\n            }}\n          >\n            <Popover\n              title=\"Queue\"\n              content={\n                this.state.queue.map(\n                  (songInfo) => (\n                    <MusicLite\n                      key={songInfo.uuid}\n                      songInfo={songInfo}\n                      onSkipTo={this.onSkipTo}\n                    />\n                  )\n                )\n              }\n            >\n              <Button\n                htmlType='button'\n                type='primary'\n                icon='ordered-list'\n              />\n            </Popover>\n            <Input.Search\n              enterButton\n              onSearch={this.onSearch}\n              onChange={(event) => (\n                this.setState({searchString:event.target.value}))\n              }\n              disabled={this.state.isLoading}\n            />\n          </Header>\n        </Affix>\n        <Content>\n          {\n            this.state.musicList.map((songInfo) => {\n              return(\n                <div key={songInfo.uuid}>\n                  <Music\n                    songInfo={songInfo}\n                    onAdd={this.onAdd}\n                  />\n                  <Divider/>\n                </div>\n              )\n            })\n          }\n        </Content>\n        <Affix\n          offsetBottom={0}\n        >\n          <Footer\n            style={{\n              borderTop:'solid',\n              borderTopWidth:1\n            }}\n          >\n            <Player\n              songInfo={this.state.currentSong}\n              onVolume={this.onVolume}\n              onPlay={this.onPlay}\n              onPause={this.onPause}\n              onBackward={this.onBackward}\n              onForward={this.onForward}\n              onFinish={this.onFinish}\n              onSeek={this.onSeek}\n            />\n          </Footer>\n        </Affix>\n      </Layout>\n    )\n  }\n}\n\nconst songList = [\n  {\n    visualizations: \"10M\",\n    duration: 185,\n    title: \"Papercut\",\n    description: \"Linking Park Will Never Die!\",\n    marks: { // extra marks\n      42:'Drop',\n      142:'Chorus'\n    },\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"1\",\n    duration: 60*60*3,\n    title: \"Oh Hell No\",\n    description: \"Don't add me to the play list\",\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"10M\",\n    duration: 185,\n    title: \"Papercut\",\n    description: \"Linking Park Will Never Die!\",\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"1\",\n    duration: 60*60*3,\n    title: \"Oh Hell No\",\n    description: \"Don't add me to the play list\",\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"10M\",\n    duration: 185,\n    title: \"Papercut\",\n    description: \"Linking Park Will Never Die!\",\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"1\",\n    duration: 60*60*3,\n    title: \"Oh Hell No\",\n    description: \"Don't add me to the play list\",\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"10M\",\n    duration: 185,\n    title: \"Papercut\",\n    description: \"Linking Park Will Never Die!\",\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"1\",\n    duration: 60*60*3,\n    title: \"Oh Hell No\",\n    description: \"Don't add me to the play list\",\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"10M\",\n    duration: 185,\n    title: \"Papercut\",\n    description: \"Linking Park Will Never Die!\",\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"1\",\n    duration: 60*60*3,\n    title: \"Oh Hell No\",\n    description: \"Don't add me to the play list\",\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"10M\",\n    duration: 185,\n    title: \"Papercut\",\n    description: \"Linking Park Will Never Die!\",\n    uuid: uuid(),\n  },\n  {\n    visualizations: \"1\",\n    duration: 60*60*3,\n    title: \"Oh Hell No\",\n    description: \"Don't add me to the play list\",\n    uuid: uuid(),\n  },\n]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Dj } from './containers/Dj/Dj.js'\n\nReactDOM.render(<Dj />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}